plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "1.2.1"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    include "org.clojure:clojure:${rootProject.clojure_version}"
    modApi "org.clojure:clojure:${rootProject.clojure_version}"
    api "org.clojure:clojure:${rootProject.clojure_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    duplicatesStrategy 'exclude'
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    archivesBaseName = rootProject.archives_base_name+"-fabric"
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    duplicatesStrategy 'exclude'
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        mavenLocal()
        // Add repositories to publish to here.
    }
}

curseforge {
    if (System.getenv('CURSEFORGE_KEY') != null) {
        apiKey = System.getenv('CURSEFORGE_KEY')
        project {
            id = '591639'
            changelog = 'See: https://github.com/lukebemish/clojurewrapper/blob/main/changelogs/CHANGELOG.md'
            releaseType = 'beta'
            addGameVersion '1.18.2'
            addGameVersion 'Fabric'
            mainArtifact(remapJar) {
                displayName = "ClojureWrapper [Fabric 1.18.2] v$project.version"
                relations {
                    requiredDependency 'fabric-api'
                }
            }
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

afterEvaluate {
    tasks.curseforge.dependsOn build
}
